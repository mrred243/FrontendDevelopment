{"ast":null,"code":"import _slicedToArray from \"/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/src/components/customers.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport AddCustomers from './addCustomers';\nimport Training from './trainings';\nimport EditCustomer from './editCustomer';\nexport default function Customers() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        customers = _useState2[0],\n        setCustomers = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        input = _useState6[0],\n        setInput = _useState6[1];\n\n  useEffect(() => fetchData(), []);\n\n  const inputChanged = event => {\n    setInput(event.target.value);\n  };\n\n  const searchById = event => {\n    event.preventDefault();\n    console.log(input);\n    fetch('https://customerrest.herokuapp.com/api/customers/' + input).then(response => response.json()).then(data => {\n      setCustomers([data]);\n      setInput('');\n    });\n  };\n\n  const fetchData = () => {\n    fetch('https://customerrest.herokuapp.com/api/customers/').then(response => response.json()).then(data => {\n      setCustomers(data.content);\n    }).catch(err => console.error(err));\n  };\n\n  const saveCus = newCus => {\n    fetch('https://customerrest.herokuapp.com/api/customers/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCus)\n    }).then(res => fetchData()).catch(err => console.error(err));\n  };\n\n  const deleteCus = link => {\n    if (window.confirm('Are you sure?')) {\n      fetch(link, {\n        method: 'DELETE'\n      }).then(res => fetchData()).then(res => setMessage('Customers is deleted')).catch(err => console.error(err));\n    }\n  };\n\n  const updateCus = (cus, link) => {\n    fetch(link, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cus)\n    }).then(res => fetchData()).catch(err => console.error(err));\n  };\n\n  const columns = [{\n    Header: 'ID',\n    Cell: row => row.index + 1,\n    width: 50\n  }, {\n    Header: 'First Name',\n    accessor: 'firstname'\n  }, {\n    Header: 'Last Name',\n    accessor: 'lastname'\n  }, {\n    Header: 'Street Address',\n    accessor: 'streetaddress'\n  }, {\n    Header: 'Postcode',\n    accessor: 'postcode'\n  }, {\n    Header: 'City',\n    accessor: 'city'\n  }, {\n    Header: 'Email',\n    accessor: 'email'\n  }, {\n    Header: 'Phone number',\n    accessor: 'phone'\n  }, {\n    sortable: false,\n    filterable: false,\n    width: 150,\n    Cell: row => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(EditCustomer, {\n      updateCus: updateCus,\n      customer: row.original,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Training, {\n      customer: row.original,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))\n  }, {\n    sortable: false,\n    filterable: false,\n    width: 75,\n    accessor: 'links[1].href',\n    Cell: ({\n      value\n    }) => React.createElement(\"button\", {\n      size: \"small\",\n      color: \"secondary\",\n      onClick: () => deleteCus(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Delete\")\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: searchById,\n    value: input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    onChange: inputChanged,\n    value: input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search by CustomerID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(ReactTable, {\n    defaultPageSize: 15,\n    defaultSortDesc: true,\n    filterable: true,\n    data: customers,\n    columns: columns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(AddCustomers, {\n    saveCus: saveCus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/src/components/customers.js"],"names":["React","useState","useEffect","ReactTable","AddCustomers","Training","EditCustomer","Customers","customers","setCustomers","message","setMessage","input","setInput","fetchData","inputChanged","event","target","value","searchById","preventDefault","console","log","fetch","then","response","json","data","content","catch","err","error","saveCus","newCus","method","headers","body","JSON","stringify","res","deleteCus","link","window","confirm","updateCus","cus","columns","Header","Cell","row","index","width","accessor","sortable","filterable","original"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA,oBACAN,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,QAC3BO,SAD2B;AAAA,QAChBC,YADgB;;AAAA,qBAEJR,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,QAE3BS,OAF2B;AAAA,QAElBC,UAFkB;;AAAA,qBAGRV,QAAQ,CAAC,EAAD,CAHA;AAAA;AAAA,QAG3BW,KAH2B;AAAA,QAGpBC,QAHoB;;AAMlCX,EAAAA,SAAS,CAAC,MAAMY,SAAS,EAAhB,EAAoB,EAApB,CAAT;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIH,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACI,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAW,IAAAA,KAAK,CAAC,sDAAsDX,KAAvD,CAAL,CACCY,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEOG,IAAI,IAAI;AACClB,MAAAA,YAAY,CAAC,CAACkB,IAAD,CAAD,CAAZ;AACAd,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KALf;AAMD,GATD;;AAWA,QAAMC,SAAS,GAAG,MAAM;AACtBS,IAAAA,KAAK,CAAC,mDAAD,CAAL,CACCC,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEOG,IAAI,IAAI;AAAElB,MAAAA,YAAY,CAACkB,IAAI,CAACC,OAAN,CAAZ;AAChB,KAHD,EAICC,KAJD,CAIOC,GAAG,IAAIT,OAAO,CAACU,KAAR,CAAcD,GAAd,CAJd;AAMD,GAPD;;AASA,QAAME,OAAO,GAAIC,MAAD,IAAY;AAC1BV,IAAAA,KAAK,CAAC,mDAAD,EACH;AACEW,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALR,KADG,CAAL,CASCT,IATD,CASMe,GAAG,IAAIzB,SAAS,EATtB,EAUCe,KAVD,CAUOC,GAAG,IAAIT,OAAO,CAACU,KAAR,CAAcD,GAAd,CAVd;AAYD,GAbD;;AAeA,QAAMU,SAAS,GAAIC,IAAD,IAAU;AAC1B,QAAIC,MAAM,CAACC,OAAP,CAAe,eAAf,CAAJ,EAAqC;AACnCpB,MAAAA,KAAK,CAACkB,IAAD,EAAO;AAACP,QAAAA,MAAM,EAAE;AAAT,OAAP,CAAL,CACCV,IADD,CACMe,GAAG,IAAIzB,SAAS,EADtB,EAECU,IAFD,CAEMe,GAAG,IAAI5B,UAAU,CAAC,sBAAD,CAFvB,EAGCkB,KAHD,CAGOC,GAAG,IAAIT,OAAO,CAACU,KAAR,CAAcD,GAAd,CAHd;AAID;AACF,GAPD;;AASA,QAAMc,SAAS,GAAG,CAACC,GAAD,EAAMJ,IAAN,KAAe;AAC/BlB,IAAAA,KAAK,CAACkB,IAAD,EAAO;AACVP,MAAAA,MAAM,EAAE,KADE;AAEVC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFC;AAKVC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeO,GAAf;AALI,KAAP,CAAL,CAOCrB,IAPD,CAOMe,GAAG,IAAIzB,SAAS,EAPtB,EAQCe,KARD,CAQOC,GAAG,IAAIT,OAAO,CAACU,KAAR,CAAcD,GAAd,CARd;AASD,GAVD;;AAaF,QAAMgB,OAAO,GAAG,CACd;AACEC,IAAAA,MAAM,EAAE,IADV;AAEEC,IAAAA,IAAI,EAAEC,GAAG,IAAKA,GAAG,CAACC,KAAJ,GAAY,CAF5B;AAGEC,IAAAA,KAAK,EAAE;AAHT,GADc,EAMd;AACEJ,IAAAA,MAAM,EAAE,YADV;AAEEK,IAAAA,QAAQ,EAAE;AAFZ,GANc,EAUd;AACEL,IAAAA,MAAM,EAAE,WADV;AAEEK,IAAAA,QAAQ,EAAE;AAFZ,GAVc,EAcd;AACEL,IAAAA,MAAM,EAAE,gBADV;AAEEK,IAAAA,QAAQ,EAAE;AAFZ,GAdc,EAkBd;AACEL,IAAAA,MAAM,EAAE,UADV;AAEEK,IAAAA,QAAQ,EAAE;AAFZ,GAlBc,EAsBd;AACEL,IAAAA,MAAM,EAAE,MADV;AAEEK,IAAAA,QAAQ,EAAE;AAFZ,GAtBc,EA0Bd;AACEL,IAAAA,MAAM,EAAE,OADV;AAEEK,IAAAA,QAAQ,EAAE;AAFZ,GA1Bc,EA8Bd;AACEL,IAAAA,MAAM,EAAE,cADV;AAEEK,IAAAA,QAAQ,EAAE;AAFZ,GA9Bc,EAmCd;AACEC,IAAAA,QAAQ,EAAE,KADZ;AAEEC,IAAAA,UAAU,EAAE,KAFd;AAGEH,IAAAA,KAAK,EAAE,GAHT;AAIEH,IAAAA,IAAI,EAAEC,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEL,SAAzB;AAAoC,MAAA,QAAQ,EAAEK,GAAG,CAACM,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEN,GAAG,CAACM,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH;AAJf,GAnCc,EA4Cd;AACEF,IAAAA,QAAQ,EAAE,KADZ;AAEEC,IAAAA,UAAU,EAAE,KAFd;AAGEH,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,QAAQ,EAAE,eAJZ;AAKEJ,IAAAA,IAAI,EAAE,CAAC;AAAC9B,MAAAA;AAAD,KAAD,KAAa;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,KAAK,EAAC,WAA3B;AAAuC,MAAA,OAAO,EAAE,MAAMsB,SAAS,CAACtB,KAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALrB,GA5Cc,CAAhB;AAwDA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAM,IAAA,QAAQ,EAAEC,UAAhB;AAA4B,IAAA,KAAK,EAAEP,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,QAAQ,EAAEG,YAA/B;AAA6C,IAAA,KAAK,EAAEH,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADN,EAMM,oBAAC,UAAD;AAAY,IAAA,eAAe,EAAE,EAA7B;AACE,IAAA,eAAe,EAAE,IADnB;AAEC,IAAA,UAAU,EAAE,IAFb;AAEmB,IAAA,IAAI,EAAEJ,SAFzB;AAEoC,IAAA,OAAO,EAAEsC,OAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN,EASM,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEd,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATN,CADJ;AAiBC","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport AddCustomers from './addCustomers';\nimport Training from './trainings';\nimport EditCustomer from './editCustomer';\n\n\nexport default function Customers() {\n  const [customers, setCustomers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [input, setInput] = useState('');\n\n\n  useEffect(() => fetchData(), []);\n\n  const inputChanged = (event) => {\n    setInput(event.target.value);\n  }\n\n  const searchById = (event) => {\n    event.preventDefault();\n    console.log(input);\n    fetch('https://customerrest.herokuapp.com/api/customers/' + input)\n    .then( response => response.json())\n    .then( data => {\n                    setCustomers([data]);\n                    setInput('');\n                  });\n  }\n\n  const fetchData = () => {\n    fetch('https://customerrest.herokuapp.com/api/customers/')\n    .then( response => response.json())\n    .then( data => { setCustomers(data.content);\n    })\n    .catch(err => console.error(err))\n\n  }\n\n  const saveCus = (newCus) => {\n    fetch('https://customerrest.herokuapp.com/api/customers/',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newCus)\n      }\n    )\n    .then(res => fetchData())\n    .catch(err => console.error(err))\n\n  }\n\n  const deleteCus = (link) => {\n    if (window.confirm('Are you sure?')) {\n      fetch(link, {method: 'DELETE'})\n      .then(res => fetchData())\n      .then(res => setMessage('Customers is deleted'))\n      .catch(err => console.error(err))\n    }\n  }\n\n  const updateCus = (cus, link) => {\n    fetch(link, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cus)\n    })\n    .then(res => fetchData())\n    .catch(err => console.error(err))\n  }\n\n\nconst columns = [\n  {\n    Header: 'ID',\n    Cell: row => (row.index + 1),\n    width: 50\n  },\n  {\n    Header: 'First Name',\n    accessor: 'firstname'\n  },\n  {\n    Header: 'Last Name',\n    accessor: 'lastname'\n  },\n  {\n    Header: 'Street Address',\n    accessor: 'streetaddress'\n  },\n  {\n    Header: 'Postcode',\n    accessor: 'postcode'\n  },\n  {\n    Header: 'City',\n    accessor: 'city'\n  },\n  {\n    Header: 'Email',\n    accessor: 'email'\n  },\n  {\n    Header: 'Phone number',\n    accessor: 'phone'\n  },\n\n  {\n    sortable: false,\n    filterable: false,\n    width: 150,\n    Cell: row => <div>\n                    <EditCustomer updateCus={updateCus} customer={row.original} />\n                    <Training customer={row.original} />\n                </div>\n  },\n  {\n    sortable: false,\n    filterable: false,\n    width: 75,\n    accessor: 'links[1].href',\n    Cell: ({value}) => <button size=\"small\" color=\"secondary\" onClick={() => deleteCus(value)} >Delete</button>\n  },\n\n\n\n]\n\nreturn (\n    <div>\n          <form onSubmit={searchById} value={input}>\n              <input type=\"number\" onChange={inputChanged} value={input} />\n              <input type=\"submit\" value=\"Search by CustomerID\" />\n          </form>\n\n          <ReactTable defaultPageSize={15}\n            defaultSortDesc={true}\n           filterable={true} data={customers} columns={columns} />\n          <AddCustomers saveCus={saveCus} />\n    </div>\n);\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}