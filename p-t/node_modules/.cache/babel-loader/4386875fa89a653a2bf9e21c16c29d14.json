{"ast":null,"code":"import _slicedToArray from \"/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/src/components/trainings.js\";\nimport React, { useState } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport moment from 'moment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport AddTrainings from './addTrainings';\nexport default function Training(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        trainings = _useState2[0],\n        setTrainings = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  const customerURL = props.customer.links[1].href;\n  console.log(customerURL);\n\n  const handleClickOpen = event => {\n    setOpen(true);\n    fetchTrainings(props.customer.links[2].href);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const saveTraining = newTrain => {\n    fetch('https://customerrest.herokuapp.com/api/trainings/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTrain)\n    }).then(res => fetchTrainings(customerURL)).catch(err => console.error(err));\n  };\n\n  const fetchTrainings = link => {\n    fetch(link).then(response => response.json()).then(data => {\n      setTrainings(data.content);\n      ;\n    });\n  };\n\n  const deleteTraining = link => {\n    console.log(link);\n\n    if (window.confirm('Are you sure?')) {\n      fetch(link, {\n        method: 'DELETE'\n      }).then(res => fetchTrainings(customerURL)).catch(err => console.error(err));\n    }\n  };\n\n  const columns = [{\n    Header: 'Date',\n    accessor: 'date',\n    width: 200\n  }, {\n    Header: 'Duration (mins)',\n    accessor: 'duration',\n    width: 150\n  }, {\n    Header: 'Activity',\n    accessor: 'activity',\n    width: 150\n  }, {\n    sortable: false,\n    filterable: false,\n    width: 150,\n    accessor: 'links[1].href',\n    Cell: ({\n      value\n    }) => React.createElement(Button, {\n      size: \"small\",\n      color: \"secondary\",\n      onClick: () => deleteTraining(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Delete\")\n  }];\n  return React.createElement(\"div\", {\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Get trainings\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \" form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Trainings\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(ReactTable, {\n    defaultPageSize: 5,\n    data: trainings,\n    columns: columns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(AddTrainings, {\n    saveTraining: saveTraining,\n    link: customerURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Close\"))));\n}","map":{"version":3,"sources":["/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/src/components/trainings.js"],"names":["React","useState","ReactTable","moment","Dialog","DialogTitle","DialogActions","DialogContent","Button","AddTrainings","Training","props","trainings","setTrainings","open","setOpen","customerURL","customer","links","href","console","log","handleClickOpen","event","fetchTrainings","handleClose","saveTraining","newTrain","fetch","method","headers","body","JSON","stringify","then","res","catch","err","error","link","response","json","data","content","deleteTraining","window","confirm","columns","Header","accessor","width","sortable","filterable","Cell","value","margin"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport moment from 'moment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport AddTrainings from './addTrainings';\n\nexport default function Training(props) {\n  const [trainings, setTrainings] = useState([]);\n  const [open, setOpen] = useState(false);\n  const customerURL = props.customer.links[1].href;\n  console.log(customerURL);\n\n  const handleClickOpen = (event) => {\n    setOpen(true);\n    fetchTrainings(props.customer.links[2].href);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const saveTraining = (newTrain) => {\n    fetch('https://customerrest.herokuapp.com/api/trainings/',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body:\n          JSON.stringify(newTrain)\n      }\n  )\n  .then(res => fetchTrainings(customerURL))\n  .catch(err => console.error(err))\n};\n\n  const fetchTrainings = (link) => {\n    fetch(link)\n    .then( response => response.json())\n    .then( data =>\n      {setTrainings(data.content);\n        ;}\n    );\n\n  };\n\n  const deleteTraining = (link) => {\n    console.log(link);\n    if (window.confirm('Are you sure?')) {\n      fetch(link, {method: 'DELETE'})\n      .then(res => fetchTrainings(customerURL))\n      .catch(err => console.error(err))\n    }\n  }\n\n\nconst columns = [\n  {\n    Header: 'Date',\n    accessor: 'date',\n    width: 200,\n\n\n  },\n  {\n    Header: 'Duration (mins)',\n    accessor: 'duration',\n    width: 150\n  },\n  {\n    Header: 'Activity',\n    accessor: 'activity',\n    width: 150\n  },\n  {\n    sortable: false,\n    filterable: false,\n    width: 150,\n    accessor: 'links[1].href',\n    Cell: ({value}) => <Button size=\"small\" color=\"secondary\" onClick={() => deleteTraining(value)}>Delete</Button>\n  }\n\n]\n\nreturn (\n    <div style={{margin: 10}}>\n        <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Get trainings\n        </Button>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\" form-dialog-title\">Trainings</DialogTitle>\n          <DialogContent>\n              <ReactTable  defaultPageSize={5} data={trainings} columns={columns} />\n          </DialogContent>\n          <DialogActions>\n              <AddTrainings saveTraining={saveTraining} link={customerURL} />\n              <Button onClick={handleClose} color=\"secondary\">\n                Close\n              </Button>\n          </DialogActions>\n          </Dialog>\n    </div>\n);\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}