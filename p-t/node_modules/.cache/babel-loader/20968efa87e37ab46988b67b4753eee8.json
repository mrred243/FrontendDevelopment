{"ast":null,"code":"import _defineProperty from \"/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/src/components/addTrainings.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport moment from 'moment';\nexport default function AddTrainings(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState({\n    date: '',\n    duration: '',\n    activity: '',\n    customer: props.link\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        training = _useState4[0],\n        setTraining = _useState4[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    console.log(training.customer);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleInputChange = event => {\n    setTraining(_objectSpread({}, training, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const addTraining = () => {\n    props.saveTraining(training);\n    handleClose();\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Add new training\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"New Training\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Fill training's information here\"), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    name: \"date\",\n    value: training.date,\n    onChange: e => handleInputChange(e),\n    label: \"Date\",\n    fullWidth: true,\n    type: \"datetime-local\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"dense\",\n    name: \"duration\",\n    value: training.duration,\n    onChange: e => handleInputChange(e),\n    label: \"duration\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"dense\",\n    name: \"activity\",\n    value: training.activity,\n    onChange: e => handleInputChange(e),\n    label: \"Activity\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: addTraining,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/Users/tranhuudailoc/Documents/FrontendDevelopment/p-t/src/components/addTrainings.js"],"names":["React","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","moment","AddTrainings","props","open","setOpen","date","duration","activity","customer","link","training","setTraining","handleClickOpen","console","log","handleClose","handleInputChange","event","target","name","value","addTraining","saveTraining","margin","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport moment from 'moment';\n\n\nexport default function AddTrainings(props) {\n  const [open, setOpen] = useState(false);\n  const [training, setTraining] = useState(\n    {date: '', duration: '', activity: '', customer: props.link}\n  )\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    console.log(training.customer)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleInputChange = (event) => {\n    setTraining({...training, [event.target.name]: event.target.value});\n  };\n\n  const addTraining = () => {\n    props.saveTraining(training);\n    handleClose();\n  };\n\n  return (\n    <div style={{margin: 10}}>\n    <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n      Add new training\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">New Training</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Fill training's information here\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          name=\"date\"\n          value= {training.date}\n          onChange={e => handleInputChange(e)}\n          label=\"Date\"\n          fullWidth\n          type=\"datetime-local\"\n          />\n          <TextField\n          margin=\"dense\"\n          name=\"duration\"\n          value= {training.duration}\n          onChange={e => handleInputChange(e)}\n          label=\"duration\"\n          fullWidth\n          />\n          <TextField\n          margin=\"dense\"\n          name=\"activity\"\n          value= {training.activity}\n          onChange={e => handleInputChange(e)}\n          label=\"Activity\"\n          fullWidth\n        />\n\n\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button onClick={addTraining} color=\"primary\">\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div> )\n}\n"]},"metadata":{},"sourceType":"module"}